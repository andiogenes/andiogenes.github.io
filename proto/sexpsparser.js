// Generated by Haxe 3.4.4
(function () { "use strict";
var List = function() {
	this.length = 0;
};
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,last: function() {
		if(this.q == null) {
			return null;
		} else {
			return this.q.item;
		}
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,toString: function() {
		var s_b = "";
		var first = true;
		var l = this.h;
		s_b += "{";
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += ", ";
			}
			s_b += Std.string(Std.string(l.item));
			l = l.next;
		}
		s_b += "}";
		return s_b;
	}
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = true;
var Main = function() {
	var _in = window.document.createElement("textarea");
	var _out = window.document.createElement("textarea");
	var _button = window.document.createElement("button");
	_in.style.width = _in.style.height = _out.style.width = _out.style.height = "250px";
	_in.textContent = "(+ 5 (* 3 5) 5)\n(+ 5 6)";
	_button.textContent = "Click";
	window.document.body.appendChild(_in);
	window.document.body.appendChild(_out);
	window.document.body.appendChild(_button);
	var pars = new SExpParser(_in.textContent);
	_button.onclick = function(e) {
		pars.expression = _in.value;
		var parsed = pars.parse();
		_out.textContent = parsed.toString();
		console.log(parsed);
	};
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
var SExpParser = function(expression) {
	this.expression = expression;
};
SExpParser.__name__ = true;
SExpParser.prototype = {
	parse: function() {
		var list = new List();
		list.add(new List());
		var isStringEntry = false;
		var isSymbolEntry = false;
		var dataString = "";
		var _g1 = 0;
		var _g = this.expression.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = this.expression.charAt(i);
			switch(_g2) {
			case "\t":case "\n":case " ":
				if(isStringEntry) {
					dataString += " ";
				} else if(isSymbolEntry) {
					list.last().add(dataString);
					dataString = "";
					isSymbolEntry = false;
				}
				break;
			case "\"":
				if(isStringEntry) {
					dataString += "\"";
					list.last().add(dataString);
					dataString = "";
					isStringEntry = false;
				} else {
					isStringEntry = true;
					dataString = "\"";
				}
				break;
			case "(":
				if(isStringEntry) {
					dataString += "(";
				} else {
					list.add(new List());
				}
				break;
			case ")":
				if(isStringEntry) {
					dataString += ")";
				} else {
					if(dataString != "") {
						list.last().add(dataString);
						dataString = "";
					}
					if(isSymbolEntry) {
						isSymbolEntry = false;
					}
					var temp = list.last();
					list.remove(list.last());
					list.last().add(temp);
				}
				break;
			default:
				if(!isSymbolEntry) {
					isSymbolEntry = true;
				}
				dataString += this.expression.charAt(i);
			}
		}
		return list.first();
	}
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
Main.main();
})();
